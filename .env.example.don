# ------------------------------------------------------------------------------
# OpenGPTs Environment Configuration
# ------------------------------------------------------------------------------
# This file contains the environment variables required to run the OpenGPTs
# application with Anthropic and Groq.  It really is this simple - Let's go!
# ------------------------------------------------------------------------------

# Language Model API Keys
# At least one language model API key is required.
ANTHROPIC_API_KEY='sk-ant-api03-xxx-xxx'
GROQ_API_KEY='gsk_xxxxx'

# OpenAI API Key
# This setup is primarily used for embeddings. Monitor its usage closely.
OPENAI_API_KEY='sk-proj-xxxxx'

# LangSmith Configuration
# LangSmith integration is optional but was essential to troubleshoot Groq rate limiting issues
LANGCHAIN_ENDPOINT='https://api.smith.langchain.com'
LANGCHAIN_API_KEY='lsv2_pt_xxxxx'
LANGCHAIN_TRACING_V2="true"
LANGCHAIN_PROJECT='opengpts-sonnet-3.5'

# PostgreSQL Database Configuration
# Docker Compose will use these values to set up the database.
POSTGRES_PORT=5432
POSTGRES_DB=opengpts
POSTGRES_USER=postgres
POSTGRES_PASSWORD='spilltheT3@!'

# Tavily API Key
# Typically better than DuckDuckGo, but not required.
TAVILY_API_KEY=tvly-xxxxx

# Unused Features
# The following API keys and URLs are placeholders for features that have not been used yet.
YDC_API_KEY=placeholder
AZURE_OPENAI_DEPLOYMENT_NAME=placeholder
AZURE_OPENAI_API_KEY=placeholder
AZURE_OPENAI_API_BASE=placeholder
AZURE_OPENAI_API_VERSION=placeholder
ROBOCORP_ACTION_SERVER_URL=https://dummy-action-server.robocorp.link
ROBOCORP_ACTION_SERVER_KEY=dummy-api-key
CONNERY_RUNNER_URL=https://your-personal-connery-runner-url
CONNERY_RUNNER_API_KEY=placeholder
PROXY_URL=your_proxy_url

# ------------------------------------------------------------------------------

# Notes:
# - Tools like Arxiv, Wikipedia, DuckDuckGo, and PubMed do not require API keys.
# - The main README file provides detailed but straightforward setup instructions.
# - After setting the PostgreSQL password above, the app should run smoothly in Docker.